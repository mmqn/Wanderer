{"version":3,"sources":["Search.jsx","components/icons.jsx","components/Card.jsx","util/getPropertyType.js","util/checkPlaceAgainstFilter.js","components/MobileOptionsMenu.jsx","List.jsx","Map.jsx","components/ErrorMessage.jsx","App.jsx","util/useWindowWidthWatcher.js","index.js"],"names":["Search","uniqueValues","handleFiltering","useState","query","setQuery","matchedFilters","setMatchedFilters","isInputFocused","setIsInputFocused","searchOptions","useMemo","flatUniqueOptions","Object","keys","forEach","property","value","parsedValue","push","className","type","placeholder","Address","length","onChange","e","target","queryRegex","RegExp","filters","filter","test","map","result","split","id","targetFilterType","targetFilterValue","filterPlaces","onFocus","i","key","style","margin","role","onClick","handleApplyFilter","color","locationPin","x","y","viewBox","width","fill","d","expand","stack","Card","props","isExpanded","setIsExpanded","placeDetails","areAllCardsExpanded","isMobile","isMinimal","mapboxKey","Name","Description","Categories","City","Region","Coordinates","Notes","mapImgWidth","window","innerWidth","mapImgUrl","lng","lat","openDirectionsUrl","payload","stopPropagation","cursor","prevValue","category","maxWidth","height","src","alt","position","top","left","href","rel","marginTop","textDecoration","defaultProps","getPropertyType","testObject","targetObjectKey","checkPlaceAgainstFilter","place","includes","MobileOptionsMenu","appliedFilters","handleRemoveFilter","handleCardsDensity","handleCardsStacking","openMenu","setOpenMenu","hasAppliedFilters","useEffect","float","paddingTop","paddingLeft","paddingRight","padding","display","flexWrap","overflow","List","places","currentPlaces","setCurrentPlaces","setAppliedFilters","setAreAllCardsExpanded","stackedView","setStackedView","currentSelectedCategory","setCurrentSelectedCategory","Set","flat","applyFilters","newCurrentPlaces","reduce","acc","cur","accMatch","curMatch","newFilter","mergedFilters","undefined","find","appliedFilter","filterToRemove","filteredAppliedFilters","handleShowCategoryPlaces","selectedCategory","cardsContainer","placesInCategory","maxHeight","overflowY","bottom","right","DEFAULT_MAP_VIEW","center","zoom","Map","setMap","markerRefs","setMarkerRefs","selectedPlaceDetails","setSelectedPlaceDetails","mapContainer","useRef","mapboxgl","accessToken","newMap","container","current","newMarkerRefs","createRef","marker","index","placeCoordinates","lngLat","Marker","setLngLat","addTo","handleMountPlaceCard","ref","zIndex","showErrorMessage","setShowErrorMessage","timeout","setTimeout","clearTimeout","textAlign","lineHeight","MAPBOX_APIKEY","goodResponse","setGoodResponse","setPlaces","isMapView","setIsMapView","minimizeHeader","setMinimizeHeader","windowWidth","setWindowWidth","handleWidthUpdates","addEventListener","removeEventListener","useWindowWidthWatcher","fetchData","a","fetch","response","status","json","data","console","warn","handleUpdateHeaderSize","pageYOffset","title","ErrorMessage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9b1fd9b.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ uniqueValues, handleFiltering }) => {\n  const [query, setQuery] = useState('');\n  const [matchedFilters, setMatchedFilters] = useState([]);\n  const [isInputFocused, setIsInputFocused] = useState(false);\n\n  // Flattened list of unique search options\n  const searchOptions = useMemo(() => {\n    const flatUniqueOptions = [];\n    const properties = Object.keys(uniqueValues);\n\n    properties.forEach(property => {\n      uniqueValues[property].forEach(value => {\n        const parsedValue = `${property}|${value}`;\n        flatUniqueOptions.push(parsedValue);\n      });\n    });\n\n    return flatUniqueOptions;\n  }, [uniqueValues]);\n\n  const filterPlaces = query => {\n    if (query) {\n      const queryRegex = new RegExp(query, 'gi');\n\n      const results = searchOptions.filter(value => queryRegex.test(value));\n\n      const filters = results.map(result => {\n        const [targetFilterType, targetFilterValue] = result.split('|');\n        return { id: result, targetFilterType, targetFilterValue };\n      });\n\n      setMatchedFilters(filters);\n    } else setMatchedFilters([]);\n  };\n\n  const handleSearch = e => {\n    const query = e.target.value;\n\n    setQuery(query);\n    filterPlaces(query);\n  };\n\n  const handleFocusInput = () => {\n    setIsInputFocused(true);\n  };\n\n  const handleApplyFilter = filter => {\n    setQuery('');\n    setIsInputFocused(false);\n    handleFiltering(filter);\n  };\n\n  const handleCancelSearch = () => {\n    setQuery('');\n    setIsInputFocused(false);\n  };\n\n  return (\n    <>\n      <div className='search-bar'>\n        <input\n          type='text'\n          placeholder={`Search ${uniqueValues.Address.length} places...`}\n          value={query}\n          onChange={handleSearch}\n          onFocus={handleFocusInput}\n        />\n\n        {query.length > 0 && (\n          <div className='search-results'>\n            {matchedFilters.length > 0 ? (\n              matchedFilters.map((filter, i) => (\n                <div\n                  key={`${i}-${filter.targetFilterType}-${filter.targetFilterValue}`}\n                  className='filter-typevalue'\n                  style={{ margin: '4px' }}\n                  role='button'\n                  onClick={() => handleApplyFilter(filter)}\n                >\n                  <div className='filter-type'>{filter.targetFilterType}</div>\n\n                  <div className='filter-value'>{filter.targetFilterValue}</div>\n                </div>\n              ))\n            ) : (\n              <span style={{ color: '#ffffff' }}>No results found 🌧</span>\n            )}\n          </div>\n        )}\n      </div>\n\n      {isInputFocused && (\n        <div className='background-cover' onClick={handleCancelSearch} />\n      )}\n    </>\n  );\n};\n\nSearch.propTypes = {\n  uniqueValues: PropTypes.shape({\n    Name: PropTypes.arrayOf(PropTypes.string),\n    Categories: PropTypes.arrayOf(PropTypes.string),\n    Address: PropTypes.arrayOf(PropTypes.string),\n    City: PropTypes.arrayOf(PropTypes.string),\n    Region: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  handleFiltering: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import React from 'react';\n\nconst locationPin = (\n  <svg x='0px' y='0px' viewBox='0 0 512 512' width='18px'>\n    <path\n      style={{ fill: '#e4c200' }}\n      d='M256,0C153.755,0,70.573,83.182,70.573,185.426c0,126.888,165.939,313.167,173.004,321.035\n\t\t\tc6.636,7.391,18.222,7.378,24.846,0c7.065-7.868,173.004-194.147,173.004-321.035C441.425,83.182,358.244,0,256,0z M256,278.719\n\t\t\tc-51.442,0-93.292-41.851-93.292-93.293S204.559,92.134,256,92.134s93.291,41.851,93.291,93.293S307.441,278.719,256,278.719z'\n    />\n  </svg>\n);\n\nconst expand = (\n  <svg x='0px' y='0px' viewBox='0 0 448 512' width='18px'>\n    <path\n      style={{ fill: '#e4c200' }}\n      d='M0 180V56c0-13.3 10.7-24 24-24h124c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12H64v84c0 6.6-5.4 12-12 12H12c-6.6 0-12-5.4-12-12zM288 44v40c0 6.6 5.4 12 12 12h84v84c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12V56c0-13.3-10.7-24-24-24H300c-6.6 0-12 5.4-12 12zm148 276h-40c-6.6 0-12 5.4-12 12v84h-84c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h124c13.3 0 24-10.7 24-24V332c0-6.6-5.4-12-12-12zM160 468v-40c0-6.6-5.4-12-12-12H64v-84c0-6.6-5.4-12-12-12H12c-6.6 0-12 5.4-12 12v124c0 13.3 10.7 24 24 24h124c6.6 0 12-5.4 12-12z'\n    ></path>\n  </svg>\n);\n\nconst stack = (\n  <svg x='0px' y='0px' viewBox='0 0 512 512' width='18px'>\n    <path\n      style={{ fill: '#e4c200' }}\n      d='M12.41 148.02l232.94 105.67c6.8 3.09 14.49 3.09 21.29 0l232.94-105.67c16.55-7.51 16.55-32.52 0-40.03L266.65 2.31a25.607 25.607 0 0 0-21.29 0L12.41 107.98c-16.55 7.51-16.55 32.53 0 40.04zm487.18 88.28l-58.09-26.33-161.64 73.27c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.51 209.97l-58.1 26.33c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 276.3c16.55-7.5 16.55-32.5 0-40zm0 127.8l-57.87-26.23-161.86 73.37c-7.56 3.43-15.59 5.17-23.86 5.17s-16.29-1.74-23.86-5.17L70.29 337.87 12.41 364.1c-16.55 7.5-16.55 32.5 0 40l232.94 105.59c6.8 3.08 14.49 3.08 21.29 0L499.59 404.1c16.55-7.5 16.55-32.5 0-40z'\n    ></path>\n  </svg>\n);\n\nexport { locationPin, expand, stack };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { locationPin } from '../components/icons';\n\nconst Card = props => {\n  /* Card is open if `areAllCardsExpanded` prop is true (sets all cards to condensed from <List>),\n  or if `isExpanded` is true (local) */\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const { placeDetails, areAllCardsExpanded, isMobile, isMinimal, mapboxKey } = props;\n\n  const {\n    id,\n    Name,\n    Description,\n    Categories,\n    Address,\n    City,\n    Region,\n    Coordinates,\n    Notes,\n  } = placeDetails;\n\n  const mapImgWidth = isMobile ? window.innerWidth - 80 : 400;\n\n  const mapImgUrl =\n    'https://api.mapbox.com/styles/v1/mapbox/dark-v10/static/' +\n    Coordinates.lng +\n    ',' +\n    Coordinates.lat +\n    ',9.9,0,0/' +\n    mapImgWidth +\n    'x120@2x?access_token=' +\n    mapboxKey;\n\n  const openDirectionsUrl =\n    'https://www.google.com/maps/dir/?api=1&origin=&destination=' +\n    Coordinates.lat +\n    ',' +\n    Coordinates.lng +\n    '&travelmode=driving';\n\n  const handleToggleOpenCard = () => setIsExpanded(prevValue => !prevValue);\n\n  const handleFiltering = ({ e, payload }) => {\n    e.stopPropagation();\n    props.handleFiltering(payload);\n  };\n\n  return (\n    <div\n      className='card has-hidden-child'\n      style={{ cursor: isMinimal ? 'auto' : 'pointer' }}\n      onClick={handleToggleOpenCard}\n    >\n      <h2 className='use-ellipsis'>{Name}</h2>\n\n      <h6 className='use-ellipsis'>{Description}</h6>\n\n      <div className='categories'>\n        {Categories.map(category => (\n          <span\n            key={`${id} - ${category}`}\n            onClick={e =>\n              handleFiltering({\n                e,\n                payload: {\n                  id: `\"Categories\"|${category}`,\n                  targetFilterType: 'Categories',\n                  targetFilterValue: category,\n                },\n              })\n            }\n          >\n            {category}\n          </span>\n        ))}\n      </div>\n\n      {(isExpanded || areAllCardsExpanded) && (\n        <div className='card-details'>\n          <p\n            className='notes'\n            style={{ maxWidth: isMinimal ? '100%' : '220px' }}\n          >\n            {Notes}\n          </p>\n\n          {!isMinimal && (\n            <div\n              className='static-map'\n              style={{ width: mapImgWidth, height: '120px' }}\n            >\n              <img\n                src={mapImgUrl}\n                alt={`${Name} Map Preview`}\n                width={mapImgWidth}\n                height='120'\n              />\n\n              {isMobile ? (\n                <span\n                  style={{\n                    position: 'absolute',\n                    top: '42px',\n                    left: mapImgWidth - 10 - mapImgWidth / 2,\n                  }}\n                >\n                  {locationPin}\n                </span>\n              ) : (\n                <div className='hidden-child'>\n                  <div className='cover' />\n\n                  <div className='address'>\n                    <p>{Address}</p>\n\n                    <p\n                      className='actionable-text'\n                      onClick={e =>\n                        handleFiltering({\n                          e,\n                          payload: {\n                            id: `\"City\"|${City}`,\n                            targetFilterType: 'City',\n                            targetFilterValue: City,\n                          },\n                        })\n                      }\n                    >\n                      {City}\n                    </p>\n\n                    <p\n                      className='actionable-text'\n                      onClick={e =>\n                        handleFiltering({\n                          e,\n                          payload: {\n                            id: `\"Region\"|${Region}`,\n                            targetFilterType: 'Region',\n                            targetFilterValue: Region,\n                          },\n                        })\n                      }\n                    >\n                      {Region}\n                    </p>\n                  </div>\n\n                  <div className='get-directions'>\n                    <span\n                      style={{\n                        position: 'absolute',\n                        top: '3px',\n                        left: '-9px',\n                      }}\n                    >\n                      {locationPin}\n                    </span>\n\n                    <span />\n\n                    <a\n                      href={openDirectionsUrl}\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      directions\n                    </a>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {isMobile && (\n            <>\n              <div\n                className='address'\n                style={{\n                  position: 'relative',\n                  top: '0px',\n                  left: '0px',\n                  marginTop: '10px',\n                }}\n              >\n                <p>{Address}</p>\n\n                <p\n                  className='actionable-text'\n                  onClick={e => {\n                    handleFiltering({\n                      e,\n                      payload: {\n                        id: `\"City\"|${City}`,\n                        targetFilterType: 'City',\n                        targetFilterValue: City,\n                      },\n                    });\n                  }}\n                >\n                  {City}\n                </p>\n\n                <p\n                  className='actionable-text'\n                  onClick={e => {\n                    handleFiltering({\n                      e,\n                      payload: {\n                        id: `\"Region\"|${Region}`,\n                        targetFilterType: 'Region',\n                        targetFilterValue: Region,\n                      },\n                    });\n                  }}\n                >\n                  {Region}\n                </p>\n              </div>\n\n              <a\n                href={openDirectionsUrl}\n                target='_blank'\n                rel='noopener noreferrer'\n                onClick={e => e.stopPropagation()}\n                style={{ textDecoration: 'underline' }}\n              >\n                Get Directions\n              </a>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nCard.propTypes = {\n  placeDetails: PropTypes.object.isRequired,\n  areAllCardsExpanded: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  isMinimal: PropTypes.bool,\n  mapboxKey: PropTypes.string,\n  handleFiltering: PropTypes.func,\n};\n\nCard.defaultProps = {\n  areAllCardsExpanded: false,\n  isMobile: false,\n  isMinimal: false,\n  mapboxKey: '',\n  handleFiltering: () => {},\n};\n\nexport default Card;\n","const getPropertyType = (testObject, targetObjectKey) => {\n  if (testObject[targetObjectKey]) {\n    if (\n      typeof testObject[targetObjectKey] === 'object' &&\n      testObject[targetObjectKey].length\n    )\n      return 'array';\n    else if (typeof testObject[targetObjectKey] === 'object') return 'object';\n    return 'primitive';\n  }\n  return 'key does not exist';\n};\n\nexport default getPropertyType;\n","import getPropertyType from './getPropertyType';\n\nconst checkPlaceAgainstFilter = (place, filter) => {\n  if (getPropertyType(place, filter.targetFilterType) === 'array') {\n    if (place[filter.targetFilterType].includes(filter.targetFilterValue)) {\n      return true;\n    }\n  } else {\n    if (place[filter.targetFilterType] === filter.targetFilterValue) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default checkPlaceAgainstFilter;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { expand, stack } from '../components/icons';\n\nconst MobileOptionsMenu = ({\n  appliedFilters,\n  handleRemoveFilter,\n  handleCardsDensity,\n  handleCardsStacking,\n}) => {\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const hasAppliedFilters = appliedFilters.length > 0;\n\n  useEffect(() => {\n    setOpenMenu(false);\n  }, [hasAppliedFilters]);\n\n  return (\n    <div\n      style={openMenu && hasAppliedFilters ? { height: '110px' } : {}}\n      className='mobile-command-bar'\n      onClick={() => setOpenMenu(hasAppliedFilters && !openMenu)}\n    >\n      <div>\n        {hasAppliedFilters && (\n          <button\n            type='button'\n            style={{ float: 'left', paddingTop: '13px', paddingLeft: '14px' }}\n          >\n            <span style={{ color: '#e4c200' }}>{appliedFilters.length}</span>\n\n            <span key={`flash-${appliedFilters.length}`} className='flash'>\n              {appliedFilters.length > 1 ? ' Active Filters' : ' Active Filter'}\n            </span>\n          </button>\n        )}\n\n        <span\n          style={{ float: 'right', paddingTop: '2px', paddingRight: '10px' }}\n        >\n          <button\n            type='button'\n            style={{ padding: '8px' }}\n            onClick={handleCardsDensity}\n          >\n            {expand}\n          </button>\n\n          <button\n            type='button'\n            style={{ padding: '8px' }}\n            onClick={handleCardsStacking}\n          >\n            {stack}\n          </button>\n        </span>\n      </div>\n\n      {hasAppliedFilters && (\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'nowrap',\n            overflow: 'scroll',\n            margin: '50px 15px 0px',\n          }}\n        >\n          {appliedFilters.map(filter => (\n            <div\n              key={`${filter.targetFilterType}-${filter.targetFilterValue}`}\n              style={{}}\n              className='filter-typevalue delete'\n              role='button'\n              onClick={e => {\n                e.stopPropagation();\n                handleRemoveFilter(filter);\n              }}\n            >\n              <div className='filter-type'>{filter.targetFilterType}</div>\n\n              <div className='filter-value'>{filter.targetFilterValue}</div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nMobileOptionsMenu.propTypes = {\n  appliedFilters: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      targetFilterType: PropTypes.string,\n      targetFilterValue: PropTypes.string,\n    }),\n  ).isRequired,\n  handleRemoveFilter: PropTypes.func.isRequired,\n  handleCardsDensity: PropTypes.func.isRequired,\n  handleCardsStacking: PropTypes.func.isRequired,\n};\n\nexport default MobileOptionsMenu;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Search from './Search.jsx';\nimport Card from './components/Card';\nimport checkPlaceAgainstFilter from './util/checkPlaceAgainstFilter';\nimport MobileOptionsMenu from './components/MobileOptionsMenu.jsx';\n\nconst List = ({ places, isMobile, mapboxKey }) => {\n  const [currentPlaces, setCurrentPlaces] = useState([]);\n  const [appliedFilters, setAppliedFilters] = useState([]);\n  const [areAllCardsExpanded, setAreAllCardsExpanded] = useState(false);\n  const [stackedView, setStackedView] = useState(false);\n  // Currently open category when in stacked view\n  const [currentSelectedCategory, setCurrentSelectedCategory] = useState('');\n\n  useEffect(() => {\n    setCurrentPlaces(places);\n  }, [places]);\n\n  const uniqueValues = useMemo(() => {\n    const Name = places.map(property => property.Name);\n    const Categories = [\n      ...new Set(places.map(property => property.Categories).flat()),\n    ];\n    const Address = places.map(property => property.Address);\n    const City = [...new Set(places.map(property => property.City).flat())];\n    const Region = [...new Set(places.map(property => property.Region).flat())];\n\n    return { Name, Categories, Address, City, Region };\n  }, [places]);\n\n  /**\n   * @param {Array of Objects} filters: Objects follows shape:\n   * {\n   *    id: {String},\n   * \t  targetFilterType: {String},\n   * \t  targetFilterValue: {String},\n   * }\n   */\n  const applyFilters = filters => {\n    if (filters.length === 1) {\n      const newCurrentPlaces = places.filter(place =>\n        checkPlaceAgainstFilter(place, filters[0]),\n      );\n\n      setCurrentPlaces(newCurrentPlaces);\n    } else if (filters.length > 1) {\n      const newCurrentPlaces = places.filter(place => {\n        const matchSum = filters.reduce((acc, cur) => {\n          if (typeof acc === 'object' && typeof cur === 'object') {\n            const accMatch = checkPlaceAgainstFilter(place, acc);\n            const curMatch = checkPlaceAgainstFilter(place, cur);\n\n            if (accMatch && curMatch) return 2;\n            else if (accMatch || accMatch) return 1;\n            return 0;\n          } else if (typeof acc === 'number' && typeof cur === 'object') {\n            if (checkPlaceAgainstFilter(place, cur)) return acc + 1;\n            return acc;\n          }\n          return 0;\n        });\n\n        return matchSum === filters.length;\n      });\n\n      setCurrentPlaces(newCurrentPlaces);\n    } else setCurrentPlaces(places);\n\n    setAppliedFilters(filters);\n  };\n\n  /**\n   * @param {Object} newFilter: Object with following shape:\n   * {\n   *    id: {String},\n   *    targetFilterType: {String},\n   *    targetFilterValue: {String},\n   * }\n   */\n  const handleFiltering = newFilter => {\n    const mergedFilters =\n      appliedFilters.find(\n        appliedFilter => appliedFilter.id === newFilter.id,\n      ) === undefined\n        ? [...appliedFilters, newFilter]\n        : appliedFilters;\n\n    applyFilters(mergedFilters);\n  };\n\n  const handleRemoveFilter = filterToRemove => {\n    const filteredAppliedFilters = appliedFilters.filter(\n      appliedFilter => appliedFilter.id !== filterToRemove.id,\n    );\n\n    applyFilters(filteredAppliedFilters);\n  };\n\n  const handleCardsDensity = e => {\n    e.stopPropagation();\n    setAreAllCardsExpanded(prevValue => !prevValue);\n  };\n\n  const handleCardsStacking = e => {\n    e.stopPropagation();\n    setStackedView(prevValue => !prevValue);\n  };\n\n  const handleShowCategoryPlaces = selectedCategory => {\n    if (selectedCategory === currentSelectedCategory) {\n      setCurrentSelectedCategory('');\n    } else setCurrentSelectedCategory(selectedCategory);\n  };\n\n  const cardsContainer = stackedView ? (\n    <div className='cards-container'>\n      {uniqueValues.Categories.map(category => {\n        const placesInCategory = currentPlaces.filter(place =>\n          place.Categories.includes(category),\n        );\n\n        if (category === currentSelectedCategory) {\n          return (\n            <>\n              <div\n                key={category}\n                className='card card-stacked'\n                role='button'\n                onClick={() => handleShowCategoryPlaces(category)}\n              >\n                <h1>{category}</h1>\n              </div>\n\n              {placesInCategory.map(place => (\n                <Card\n                  key={place.id}\n                  placeDetails={place}\n                  areAllCardsExpanded={areAllCardsExpanded}\n                  isMobile={isMobile}\n                  mapboxKey={mapboxKey}\n                  handleFiltering={handleFiltering}\n                />\n              ))}\n            </>\n          );\n        } else if (placesInCategory.length > 0) {\n          return (\n            <div\n              key={category}\n              className='card card-stacked'\n              role='button'\n              onClick={() => handleShowCategoryPlaces(category)}\n            >\n              <h1>{category}</h1>\n            </div>\n          );\n        }\n        return null;\n      })}\n    </div>\n  ) : (\n    <div className='cards-container'>\n      {currentPlaces.map(place => (\n        <Card\n          key={place.id}\n          placeDetails={place}\n          areAllCardsExpanded={areAllCardsExpanded}\n          isMobile={isMobile}\n          mapboxKey={mapboxKey}\n          handleFiltering={handleFiltering}\n        />\n      ))}\n    </div>\n  );\n\n  return (\n    <>\n      <Search uniqueValues={uniqueValues} handleFiltering={handleFiltering} />\n\n      {cardsContainer}\n\n      {isMobile ? (\n        <MobileOptionsMenu\n          appliedFilters={appliedFilters}\n          handleRemoveFilter={handleRemoveFilter}\n          handleCardsDensity={handleCardsDensity}\n          handleCardsStacking={handleCardsStacking}\n        />\n      ) : (\n        <>\n          {appliedFilters.length > 0 && (\n            <div\n              className='applied-filters-menu'\n              style={{ maxHeight: '80vh', overflowY: 'auto' }}\n            >\n              <h2\n                key={`flash-${appliedFilters.length}`}\n                className='flash'\n                style={{ paddingLeft: '2px' }}\n              >\n                Applied Filters\n              </h2>\n\n              {appliedFilters.map(filter => (\n                <div\n                  key={`${filter.targetFilterType}-${filter.targetFilterValue}`}\n                  className='filter-typevalue remove-filter'\n                  role='button'\n                  onClick={() => handleRemoveFilter(filter)}\n                >\n                  <div className='filter-type'>{filter.targetFilterType}</div>\n\n                  <div className='filter-value'>{filter.targetFilterValue}</div>\n                </div>\n              ))}\n            </div>\n          )}\n\n          <button\n            type='button'\n            style={{ position: 'fixed', bottom: '50px', right: '20px' }}\n            onClick={() => setAreAllCardsExpanded(prevValue => !prevValue)}\n          >\n            {areAllCardsExpanded ? 'Condense All Cards' : 'Expand All Cards'}\n          </button>\n\n          <button\n            type='button'\n            style={{ position: 'fixed', bottom: '15px', right: '20px' }}\n            onClick={() => setStackedView(prevValue => !prevValue)}\n          >\n            Switch to {stackedView ? 'Singles' : 'Stacks'} View\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n\nList.propTypes = {\n  places: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      Name: PropTypes.string,\n      Categories: PropTypes.arrayOf(PropTypes.string),\n      Description: PropTypes.string,\n      Notes: PropTypes.string,\n      Address: PropTypes.string,\n      City: PropTypes.string,\n      Region: PropTypes.string,\n      Coordinates: PropTypes.shape({\n        lat: PropTypes.number,\n        lng: PropTypes.number,\n      }),\n    }),\n  ).isRequired,\n  isMobile: PropTypes.bool,\n  mapboxKey: PropTypes.string,\n};\n\nList.defaultProps = {\n  isMobile: false,\n  mapboxKey: '',\n};\n\nexport default List;\n","import React, { useRef, useState, useEffect, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport Card from './components/Card';\n\nconst DEFAULT_MAP_VIEW = { center: [-118.243683, 34.052235], zoom: 9 };\n\nconst Map = ({ places, isMobile, mapboxKey }) => {\n  const [map, setMap] = useState(null);\n  const [markerRefs, setMarkerRefs] = useState([]);\n  const [selectedPlaceDetails, setSelectedPlaceDetails] = useState(null);\n\n  const mapContainer = useRef(null);\n\n  // Initialize map\n  useEffect(() => {\n    mapboxgl.accessToken = mapboxKey;\n\n    const newMap = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: DEFAULT_MAP_VIEW.center,\n      zoom: DEFAULT_MAP_VIEW.zoom,\n    });\n\n    setMap(newMap);\n  }, [mapboxKey, mapContainer]);\n\n  // Create a marker ref for every place\n  useEffect(() => {\n    const newMarkerRefs = [];\n\n    places.forEach(() => newMarkerRefs.push(createRef()));\n\n    setMarkerRefs(newMarkerRefs);\n  }, [places]);\n\n  // Create Mapbox marker for each marker ref\n  useEffect(() => {\n    markerRefs.forEach((marker, index) => {\n      const placeCoordinates = places[index].Coordinates;\n      const lngLat = [placeCoordinates.lng, placeCoordinates.lat];\n\n      new mapboxgl.Marker(marker.current).setLngLat(lngLat).addTo(map);\n    });\n  }, [places, markerRefs, map]);\n\n  const handleMountPlaceCard = place => setSelectedPlaceDetails(place);\n\n  return (\n    <>\n      <div\n        style={{ width: '100vw', height: '100vh', margin: 'auto' }}\n        ref={mapContainer}\n      />\n\n      <div style={{ display: 'none' }}>\n        {places.map((place, index) => (\n          <div\n            key={place.id}\n            ref={markerRefs[index]}\n            className='map-marker'\n            onClick={() => handleMountPlaceCard(place)}\n          />\n        ))}\n      </div>\n\n      {selectedPlaceDetails && (\n        <div\n          style={{\n            zIndex: '2',\n            position: 'fixed',\n            bottom: '30px',\n            width: isMobile ? '90vw' : 'auto',\n          }}\n        >\n          <Card isMinimal placeDetails={selectedPlaceDetails} />\n\n          <button\n            type='button'\n            className='card-close-button'\n            onClick={() => handleMountPlaceCard(null)}\n          >\n            {isMobile ? 'X' : 'Close'}\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nMap.propTypes = {\n  places: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      Name: PropTypes.string,\n      Categories: PropTypes.arrayOf(PropTypes.string),\n      Description: PropTypes.string,\n      Notes: PropTypes.string,\n      Address: PropTypes.string,\n      City: PropTypes.string,\n      Region: PropTypes.string,\n      Coordinates: PropTypes.shape({\n        lat: PropTypes.number,\n        lng: PropTypes.number,\n      }),\n    }),\n  ).isRequired,\n  isMobile: PropTypes.bool.isRequired,\n  mapboxKey: PropTypes.string.isRequired,\n};\n\nexport default Map;\n","import React, { useState, useEffect } from 'react';\n\nexport default () => {\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShowErrorMessage(true), 3000);\n\n    // Run on unmounting; cleanup\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return showErrorMessage ? (\n    <div\n      style={{\n        margin: 'auto',\n        padding: '200px 20px 0px',\n        textAlign: 'center',\n      }}\n    >\n      <h1>Oh boy, looks like you broke something 🌧</h1>\n\n      <p style={{ color: '#ffffff', lineHeight: '32px' }}>\n        Just kidding, it's probably me. I would very much appreciate it if you\n        sent an{' '}\n        <a href='mailto:mmqn.michael@gmail.com' style={{ color: '#e4c200' }}>\n          email\n        </a>{' '}\n        to notify me about this!\n      </p>\n    </div>\n  ) : (\n    <div\n      style={{\n        position: 'fixed',\n        top: '50vh',\n        left: 'calc(50vw - 94px)',\n      }}\n    >\n      <h1>Loading 🌦</h1>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './styles/App.css';\nimport useWindowWidthWatcher from './util/useWindowWidthWatcher';\nimport List from './List';\nimport Map from './Map';\nimport ErrorMessage from './components/ErrorMessage';\n\nconst PLACES_ENDPOINT = 'https://wanderer-mmqn.firebaseio.com/places.json';\nconst MAPBOX_APIKEY =\n  'pk.eyJ1IjoibW1xbiIsImEiOiJjazAxNDdtMGUwN3RxM2JwNGxzYWdqeDltIn0.Ctg235d9st1jNa25YSaFlg';\n\nexport default () => {\n  const [goodResponse, setGoodResponse] = useState(true);\n  const [places, setPlaces] = useState([]);\n  const [isMapView, setIsMapView] = useState(true);\n  const [minimizeHeader, setMinimizeHeader] = useState(false);\n\n  const windowWidth = useWindowWidthWatcher();\n  const isMobile = windowWidth < 685;\n\n  const fetchData = async () => {\n    const response = await fetch(PLACES_ENDPOINT);\n    const status = response.status;\n    const data = await response.json();\n\n    if (status === 200) {\n      setGoodResponse(true);\n      setPlaces(data);\n    } else {\n      console.warn(status, response);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const handleUpdateHeaderSize = () => {\n      if (window.pageYOffset >= 40) setMinimizeHeader(true);\n      else if (window.pageYOffset < 40) setMinimizeHeader(false);\n    };\n\n    window.addEventListener('scroll', handleUpdateHeaderSize);\n\n    // Run on unmounting; cleanup\n    return () => window.removeEventListener('sroll', handleUpdateHeaderSize);\n  }, []);\n\n  return (\n    <>\n      <h1\n        title={`Click to switch to ${isMapView ? 'list' : 'map'} view`}\n        className={`header ${\n          minimizeHeader ? 'minimize-header' : 'maximize-header'\n        }`}\n        onClick={() => setIsMapView(prevValue => !prevValue)}\n      >\n        Wanderer\n      </h1>\n\n      {goodResponse === true && places.length > 0 ? (\n        isMapView ? (\n          <Map places={places} isMobile={isMobile} mapboxKey={MAPBOX_APIKEY} />\n        ) : (\n          <List places={places} isMobile={isMobile} mapboxKey={MAPBOX_APIKEY} />\n        )\n      ) : (\n        <ErrorMessage />\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const handleWidthUpdates = e => {\n    const { innerWidth } = e.target;\n    setWindowWidth(innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWidthUpdates);\n\n    return window.removeEventListener('resize', handleWidthUpdates);\n  });\n\n  return windowWidth;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}